name: Test sPoll

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  apitest:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies and Test
      working-directory: ./api
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python manage.py test
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DEBUG: 1
        ALLOWED_HOSTS: "localhost,127.0.0.1,[::1]"
        CSRF_TRUSTED_ORIGINS: "http://localhost:8000"
        SQL_ENGINE: ${{ secrets.SQL_ENGINE }}
        SQL_DATABASE: ${{ secrets.SQL_DATABASE }}
        SQL_USER: ${{ secrets.SQL_USER }}
        SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
        SQL_HOST: ${{ secrets.SQL_HOST }}
        SQL_PORT: ${{ secrets.SQL_PORT }}build:

  nodetest:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'frontend'

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - name: Install, build and test frontend
      run: |
        npm ci
        npm run build --if-present
        npm test
